{"version":3,"sources":["gallaryState.js","App.js","index.js"],"names":["getPhotos","createAsyncThunk","fetch","response","json","formattedResponse","gallerySlice","createSlice","name","initialState","photos","isLoading","extraReducers","pending","state","fulfilled","action","payload","rejected","App","dispatch","useDispatch","useSelector","gallery","useEffect","console","log","className","map","photo","alt","author","src","download_url","width","height","id","store","configureStore","reducer","galleryReducer","rootElement","document","getElementById","createRoot","render"],"mappings":"uOAEaA,EAAYC,YAAiB,mBAAD,gCAAqB,gHACrCC,MAAM,gDAD+B,cACtDC,EADsD,gBAE5BA,EAASC,OAFmB,cAEtDC,EAFsD,yBAGrDA,GAHqD,4CAyB/CC,EAnBaC,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,OAAQ,GACRC,WAAW,GAEbC,eAAa,mBACVZ,EAAUa,SAAU,SAACC,GACpBA,EAAMH,WAAY,CACnB,IAHU,cAIVX,EAAUe,WAAY,SAACD,EAAOE,GAC7BF,EAAMJ,OAASM,EAAOC,QACtBH,EAAMH,WAAY,CACnB,IAPU,cAQVX,EAAUkB,UAAW,SAACJ,GACrBA,EAAMH,WAAY,CACnB,IAVU,KAaf,Q,OCtBe,SAASQ,IACtB,IAAMC,EAAWC,cACXX,EAASY,aAAY,SAACR,GAAD,OAAWA,EAAMS,QAAQb,MAAzB,IAM3B,OAJAc,qBAAU,WACRJ,EAASpB,IACV,GAAE,CAACoB,IACJK,QAAQC,IAAIhB,GAEV,sBAAKiB,UAAU,MAAf,UACE,+CACA,kGACA,uBACA,qBAAKA,UAAU,UAAf,SACGjB,EAAOkB,KAAI,SAACC,GAAD,OACV,qBAEEC,IAAKD,EAAME,OACXC,IAAKH,EAAMI,aACXC,MAAM,MACNC,OAAO,OAJFN,EAAMO,GAFH,MAUd,iDAGL,CCzBD,IAAMC,EAAQC,YAAe,CAC3BC,QAAS,CACPhB,QAASiB,KAIPC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAClB,EAAD,M","file":"static/js/main.841ce7bd.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const getPhotos = createAsyncThunk(\"photos/getPhotos\", async () => {\r\n  const response = await fetch(\"https://picsum.photos/v2/list?page=3&limit=9\");\r\n  const formattedResponse = await response.json();\r\n  return formattedResponse;\r\n});\r\n\r\nexport const gallerySlice = createSlice({\r\n  name: \"gallery\",\r\n  initialState: {\r\n    photos: [],\r\n    isLoading: false\r\n  },\r\n  extraReducers: {\r\n    [getPhotos.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [getPhotos.fulfilled]: (state, action) => {\r\n      state.photos = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [getPhotos.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    }\r\n  }\r\n});\r\nexport default gallerySlice.reducer;\r\n","import \"./styles.css\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPhotos } from \"./gallaryState\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const photos = useSelector((state) => state.gallery.photos);\n\n  useEffect(() => {\n    dispatch(getPhotos());\n  }, [dispatch]);\n  console.log(photos);\n  return (\n    <div className=\"App\">\n      <h1>PHOTO GALLERY</h1>\n      <p>This is a photo gallery made using redux toolkit and redux thunk.</p>\n      <hr />\n      <div className=\"Gallery\">\n        {photos.map((photo) => (\n          <img\n            key={photo.id}\n            alt={photo.author}\n            src={photo.download_url}\n            width=\"400\"\n            height=\"400\"\n          />\n        ))}\n      </div>\n      <button>VIEW MORE</button>\n    </div>\n  );\n}\n","import { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport galleryReducer from \"./gallaryState\";\n\nconst store = configureStore({\n  reducer: {\n    gallery: galleryReducer\n  }\n});\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}